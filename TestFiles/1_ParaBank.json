{
  "URL": "https://parabank.parasoft.com/parabank/index.htm",
  "Type": "Web UI and API Site",
  "WebApplication": "An online banking site from Parasoft with login and REST/SOAP APIs. You can also access the database if you run the project locally using the source code.",

  "TestCases": [
    {
      "Description": "Verify successful login with valid credentials",
      "ExpectedResult": "User is redirected to account overview page"
    },
    {
      "Description": "Verify login failure with incorrect credentials",
      "ExpectedResult": "Error message: 'Invalid username or password'"
    },
    {
      "Description": "Verify password complexity enforcement (min 8 chars, mixed case, special char)",
      "ExpectedResult": "Error: 'Password must be at least 8 characters and contain uppercase, lowercase, number, and special character'"
    },
    {
      "Description": "Verify password confirmation validation",
      "ExpectedResult": "Error: 'Passwords must match'"
    },
    {
      "Description": "Verify account creation with valid data",
      "ExpectedResult": "User is redirected to account overview page with success message"
    },
    {
      "Description": "Verify account creation with existing username",
      "ExpectedResult": "Error: 'Username already exists'"
    },
    {
      "Description": "Verify account deletion functionality",
      "ExpectedResult": "User is redirected to home page with success message"
    },
    {
      "Description": "Verify account balance retrieval via API",
      "ExpectedResult": "API returns current balance in JSON format"
    },
    {
      "Description": "Verify fund transfer between accounts via API",
      "ExpectedResult": "API returns success message and updated balances"
    },
    {
      "Description": "Verify transaction history retrieval via API",
      "ExpectedResult": "API returns list of transactions in JSON format"
    },
    {
      "Description": "Verify user profile update functionality",
      "ExpectedResult": "User profile is updated successfully with new data"
    },
    {
      "Description": "Verify logout functionality",
      "ExpectedResult": "User is redirected to login page"
    },
    {
      "Description": "Validate error handling for invalid API requests",
      "ExpectedResult": "API returns HTTP 400 Bad Request status code"
    },
    {
      "Description": "Verify API authentication with valid JWT token",
      "ExpectedResult": "API returns 200 OK status code with requested data"
    },
    {
      "Description": "Verify API authentication with invalid JWT token",
      "ExpectedResult": "API returns HTTP 401 Unauthorized status code"
    },
    {
      "Description": "Verify API response for unauthorized access",
      "ExpectedResult": "API returns HTTP 403 Forbidden status code"
    },
    {
      "Description": "Verify API response for non-existent resource",
      "ExpectedResult": "API returns HTTP 404 Not Found status code"
    },
    {
      "Description": "Verify API response for server error",
      "ExpectedResult": "API returns HTTP 500 Internal Server Error status code"
    },
    {
      "Description": "Verify API response time is within acceptable limits",
      "ExpectedResult": "API response time is less than 2 seconds"
    }
  ]
}
